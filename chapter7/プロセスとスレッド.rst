プロセス
--------
* Linuxを含むUNIX系オペレーティングシステムでは、プログラムは「プロセス」と呼ばれる単位で実行される
* プロセスは、それぞれに固有の仮想アドレス空間を持つ
* 実行中のプロセスはデータをプロセス内に保持すると同時に、カーネルがそのプロセスを実行するために必要なプログラムの内容そのものも保持している
* fork()（appendix.rst->fork()）
    * 新しいプロセスを生成するシステムコール
    * 自分のコピーとなるプロセスを生成する
* getpid()（appendix.rst->getpid)）
    * プロセスIDの取得用システムコール

スレッド
-------

* Linuxでは「スレッド」と呼ばれるタスクの単位がある
* スレッドはプロセスの中で動作する
* プロセスのように仮想メモリ空間のコピーを持つのでなく、同じ仮想メモリ空間を共有しつつも別タスクとして動作する
    * pthread
        * スレッド実現方法として利用
        * pthread.c(sourcecode.rst->pthread.c)では、スレッドが同じ仮想アドレス空間を共有しているため、各スレッド内部での変数を扱うと同時にglobal_valという整数の変数の値を少しずつ大きくできる
        * fork()によって親子に分かれた2つのプロセスでは、pthread.cのように同じグルーバル変数を別々のスレッドから変更することができない
            * スレッドでは予期しないタイミングで変数内容が変わるなど、別の問題が発生することもある

引用
あきみち，”基礎と実装Linuxネットワークプログラミング”，株式会社品の出版，2010，pp.188-193.